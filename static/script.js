
let currentText = '';

function loadText() {
    const text = document.getElementById('user-text').value.trim();
    if (!text) {
        alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç');
        return;
    }

    currentText = text;
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º textContent –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏, CSS white-space: pre-wrap —Å–æ—Ö—Ä–∞–Ω–∏—Ç –ø–µ—Ä–µ–Ω–æ—Å—ã
    document.getElementById('text-container').textContent = text;
    document.getElementById('translation').innerHTML =
        '<span style="color: #7f8c8d;">–í—ã–¥–µ–ª–∏—Ç–µ —Ç–µ–∫—Å—Ç –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞</span>';
}

function getSelectedText() {
    const selection = window.getSelection();
    return selection.toString().trim();
}

function translateSelection() {
    const selectedText = getSelectedText();
    if (!selectedText) {
        alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–¥–µ–ª–∏—Ç–µ —Ç–µ–∫—Å—Ç –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞');
        return;
    }
    performTranslation(selectedText);
}

function performTranslation(text) {
    const sourceLang = document.getElementById('source-lang').value;
    const targetLang = document.getElementById('target-lang').value;

    document.getElementById('translation').innerHTML = `
        <span style="color: #7f8c8d;">–ò–¥—ë—Ç –ø–µ—Ä–µ–≤–æ–¥...</span>
    `;

    fetch('/translate', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
        },
        body: JSON.stringify({
            word: text,
            source: sourceLang,
            target: targetLang
        })
    })
    .then(response => {
        if (!response.ok) throw new Error('–û—à–∏–±–∫–∞ —Å–µ—Ç–∏');
        return response.json();
    })
    .then(data => {
        document.getElementById('translation').innerHTML = `
            <span class="lang-label">–ò—Å—Ö–æ–¥–Ω—ã–π —Ç–µ–∫—Å—Ç:</span> <strong>${escapeHtml(text)}</strong><br>
            <span class="lang-label">–ü–µ—Ä–µ–≤–æ–¥:</span> <strong>${escapeHtml(data.translation)}</strong>
        `;
    })
    .catch(error => {
        document.getElementById('translation').innerHTML = `
            <span style="color: #e74c3c;">–û—à–∏–±–∫–∞ –ø–µ—Ä–µ–≤–æ–¥–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.</span>
        `;
        console.error('–û—à–∏–±–∫–∞ –ø–µ—Ä–µ–≤–æ–¥–∞:', error);
    });
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –ø—Ä–æ–±–µ–ª–∞
document.addEventListener('keydown', function(event) {
    if (event.code === 'Space' && getSelectedText()) {
        event.preventDefault(); // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º –ø—Ä–æ–∫—Ä—É—Ç–∫—É —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        translateSelection();
    }
});

// –í–∫–ª—é—á–∞–µ–º –∫–Ω–æ–ø–∫—É –∫–æ–≥–¥–∞ —Ç–µ–∫—Å—Ç –≤—ã–¥–µ–ª–µ–Ω
document.addEventListener('selectionchange', function() {
    const btn = document.getElementById('translate-btn');
    btn.disabled = !getSelectedText();
});

// –£—Ç–∏–ª–∏—Ç–∞—Ä–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è HTML
function escapeHtml(text) {
    const div = document.createElement('div');
    div.textContent = text;
    return div.innerHTML;
}

// –§—É–Ω–∫—Ü–∏—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Ç–µ–º—ã
function toggleTheme() {
    const currentTheme = document.documentElement.getAttribute('data-theme');
    const newTheme = currentTheme === 'dark' ? 'light' : 'dark';

    document.documentElement.setAttribute('data-theme', newTheme);

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—ã–±–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    localStorage.setItem('theme', newTheme);

    // –û–±–Ω–æ–≤–ª—è–µ–º –∏–∫–æ–Ω–∫—É –∫–Ω–æ–ø–∫–∏
    const toggleBtn = document.getElementById('theme-toggle');
    toggleBtn.textContent = newTheme === 'dark' ? '‚òÄÔ∏è' : 'üåô';
}

// –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—É—é —Ç–µ–º—É –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener('DOMContentLoaded', function() {
    const savedTheme = localStorage.getItem('theme') || 'light';
    document.documentElement.setAttribute('data-theme', savedTheme);

    const toggleBtn = document.getElementById('theme-toggle');
    toggleBtn.textContent = savedTheme === 'dark' ? '‚òÄÔ∏è' : 'üåô';
});


